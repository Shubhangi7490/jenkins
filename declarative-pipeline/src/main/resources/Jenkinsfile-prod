pipeline {
    agent any
	
    options {
        // disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr:'5'))
    }

	stages {
		stage("Deploy to prod") {
			steps {
				sh """
					${
						if (Boolean.parseBoolean(env.GIT_USE_SSH_KEY) == Boolean.TRUE) {
							return """
							eval "\$(ssh-agent -s)"
							ssh-add /usr/share/jenkins/gitsshkey
							"""
						} else {
							return """
							# https://issues.jenkins-ci.org/browse/JENKINS-28335
							git config --local credential.helper cache
							echo 'protocol=https\nhost=github.com\nusername=${GIT_USERNAME}\npassword=${GIT_PASSWORD}\n\n' | git credential approve
							"""
						}
					}
					git tag prod/${env.PROJECT_NAME}/\${PIPELINE_VERSION}
					git push --tags
					"""

				sh '''#!/bin/bash
				${WORKSPACE}@tools/src/main/bash/prod_deploy.sh
				'''
			}
		}

		stage("Complete switch over") {
			steps {
				sh '''#!/bin/bash
				${WORKSPACE}@tools/src/main/bash/prod_complete.sh
				'''
			}
		}
	}
	post {
		fixed {
            slackSend color: 'good', message: "${currentBuild.fullDisplayName} - #${env.BUILD_NUMBER} Back to normal (<${env.RUN_DISPLAY_URL}|Open>)"
        }
        failure {
            slackSend color: 'danger', message: "${currentBuild.fullDisplayName} - #${env.BUILD_NUMBER} Failure after ${currentBuild.durationString.replace(' and counting', '')} (<${env.RUN_DISPLAY_URL}|Open>)"
        }
	}
}
